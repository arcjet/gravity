name: Rust build and test

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  gravity:
    name: Gravity tests
    runs-on: ubuntu-latest
    steps:
      # Environment security
      - name: Step Security
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            index.crates.io:443
            static.crates.io:443
            static.rust-lang.org:443

      # Checkout
      # Most toolchains require checkout first
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: 'stable'

      - name: Setup Go cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Install Rust
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b

      # Workflow

      - name: cargo build
        run: cargo build --locked --verbose
        env:
          CARGO_TERM_COLOR: always

      - name: cargo test
        run: cargo test --locked --verbose
        env:
          CARGO_TERM_COLOR: always

      - name: go test
        run: |
          go generate ./...
          go test ./...

